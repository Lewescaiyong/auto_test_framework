#!/usr/bin/env python

from lib.exceptions.check_exception import CheckException
from lib.base.script.gui_test.case_mw_gui import CaseMWGUI


class ${case_info["ClassName"]}(CaseMWGUI):
    """${case_info["Description"]}
    No.: ${case_info["No."]}
    Preconditions:
        % for i in case_info["Preconditions"]:
        ${i}
        % endfor
    Step actions:
        % for i in case_info["Step actions"]:
        ${i}
        % endfor
    Expected results:
        % for i in case_info["Expected results"]:
        ${i}
        % endfor
    Priority: ${case_info["Priority"]}
    Author: ${Author}
    ChangeInfo: ${Author} ${date} create
    """

    def prepare(self):
        """the preparation before executing the test steps
        Args:
        Example:
        Return:
        Author: ${Author}
        IsInterface: False
        ChangeInfo: ${Author} ${date} create
        """
        super(${case_info["ClassName"]}, self).prepare()

        self.logger.info('Preconditions:')
        % for i in case_info["Preconditions"]:
        self.logger.info('${i}')
        % endfor

    def process(self):
        """execute the test steps
        Args:
        Example:
        Return:
        Author: ${Author}
        IsInterface: False
        ChangeInfo: ${Author} ${date} create
        """
        super(${case_info["ClassName"]}, self).process()

        self.logger.info('Step actions:')
        % for i in case_info["Step actions"]:
        self.logger.info('${i}')
        % endfor

        self.logger.info('Expected results:')
        % for i in case_info["Expected results"]:
        self.logger.info('${i}')
        % endfor

    def cleanup(self):
        """clean up after performing the test steps
        Args:
        Example:
        Return:
        Author: ${Author}
        IsInterface: False
        ChangeInfo: ${Author} ${date} create
        """
        super(${case_info["ClassName"]}, self).cleanup()
